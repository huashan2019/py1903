<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Output\KEA128.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Output\KEA128.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060422: Last Updated: Wed May 06 17:29:33 2020
<BR><P>
<H3>Maximum Stack Usage =        136 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; ArmDataRxPro &rArr; ArmDataAnalyse &rArr; Arm_ACK &rArr; UartTxData &rArr; Uart_Tx_DataPro &rArr; UartGetFromBuf &rArr; Queue_Out
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[4d]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[10]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[10]">NMI_Handler</a><BR>
 <LI><a href="#[11]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[11]">HardFault_Handler</a><BR>
 <LI><a href="#[12]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[12]">SVC_Handler</a><BR>
 <LI><a href="#[13]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[13]">PendSV_Handler</a><BR>
 <LI><a href="#[25]">ACMP0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[25]">ACMP0_IRQHandler</a><BR>
 <LI><a href="#[9b]">UART_GetChar</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9b]">UART_GetChar</a><BR>
 <LI><a href="#[9e]">UART_PutChar</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9e]">UART_PutChar</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[25]">ACMP0_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[2a]">ACMP1_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[24]">ADC_IRQHandler</a> from interrupt.o(i.ADC_IRQHandler) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[26]">FTM0_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[27]">FTM1_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[28]">FTM2_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[1a]">FTMRE_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[11]">HardFault_Handler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[1d]">I2C0_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[1e]">I2C1_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[30]">ICS_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[1c]">IRQ_IRQHandler</a> from interrupt.o(i.IRQ_IRQHandler) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[2d]">KBI0_IRQHandler</a> from interrupt.o(i.KBI0_IRQHandler) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[2e]">KBI1_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[33]">MSCAN_RX_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[34]">MSCAN_TX_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[10]">NMI_Handler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[2b]">PIT_CH0_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[2c]">PIT_CH1_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[1b]">PMC_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[32]">PWT_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[13]">PendSV_Handler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[29]">RTC_IRQHandler</a> from interrupt.o(i.RTC_IRQHandler) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[15]">Reserved16_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[16]">Reserved17_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[17]">Reserved18_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[18]">Reserved19_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[19]">Reserved20_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[2f]">Reserved42_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[f]">Reset_Handler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[1f]">SPI0_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[20]">SPI1_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[12]">SVC_Handler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[14]">SysTick_Handler</a> from interrupt.o(i.SysTick_Handler) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[35]">SystemInit</a> from system_skeaz1284.o(i.SystemInit) referenced from startup_skeaz1284.o(.text)
 <LI><a href="#[21]">UART0_IRQHandler</a> from interrupt.o(i.UART0_IRQHandler) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[22]">UART1_IRQHandler</a> from interrupt.o(i.UART1_IRQHandler) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[23]">UART2_IRQHandler</a> from interrupt.o(i.UART2_IRQHandler) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[31]">WDOG_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[38]">__main</a> from __main.o(!!!main) referenced from startup_skeaz1284.o(.text)
 <LI><a href="#[36]">init_data_bss</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[38]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[39]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[3b]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[b0]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[b1]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[3c]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[b2]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[40]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[b3]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[b4]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[b5]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[b6]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[b7]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[b8]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[b9]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[ba]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[bb]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[bc]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[bd]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[be]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[bf]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[c0]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[c1]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[c2]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[c3]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[c4]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[c5]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[c6]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[c7]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[45]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[c8]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[c9]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[ca]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[cb]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[cc]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[cd]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[ce]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[3a]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[cf]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[3d]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[3f]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[d0]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[41]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; ArmDataRxPro &rArr; ArmDataAnalyse &rArr; Arm_ACK &rArr; UartTxData &rArr; Uart_Tx_DataPro &rArr; UartGetFromBuf &rArr; Queue_Out
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[d1]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[4f]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[44]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[d2]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[46]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[36]"></a>init_data_bss</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(.text)
</UL>
<P><STRONG><a name="[f]"></a>Reset_Handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>ACMP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACMP0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACMP0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>ACMP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[d3]"></a>DefaultISR</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text), UNUSED)

<P><STRONG><a name="[26]"></a>FTM0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>FTM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>FTM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>FTMRE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>ICS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>KBI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>MSCAN_RX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>MSCAN_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>PIT_CH0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>PIT_CH1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>PMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>PWT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>Reserved16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>Reserved17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>Reserved18_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>Reserved19_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>Reserved20_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>Reserved42_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>WDOG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_skeaz1284.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[49]"></a>_memset_w</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>

<P><STRONG><a name="[48]"></a>_memset</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[4a]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>

<P><STRONG><a name="[d4]"></a>__rt_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[ad]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysinit
</UL>

<P><STRONG><a name="[d5]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[4b]"></a>__rt_memclr_w</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[d6]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[74]"></a>__aeabi_uidivmod</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Queue_Out
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Queue_In
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Init
</UL>

<P><STRONG><a name="[d7]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[7a]"></a>__aeabi_idivmod</STRONG> (Thumb, 326 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetClockDay
</UL>

<P><STRONG><a name="[d8]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[9]"></a>__rt_heap_escrow</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[8]"></a>__rt_heap_expand</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[d9]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[4c]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[da]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[3e]"></a>__user_setup_stackheap</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[43]"></a>exit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[db]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[dc]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[dd]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[47]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[24]"></a>ADC_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupt.o(i.ADC_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>BootloaderJumpToApp</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_updata.o(i.BootloaderJumpToApp))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArmDataAnalyse
</UL>

<P><STRONG><a name="[50]"></a>Bsp_Clock_Init</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, bsp.o(i.Bsp_Clock_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Bsp_Clock_Init &rArr; sysinit &rArr; ICS_Init &rArr; FEI_to_FEE_OSC &rArr; ICS_SetClkDivider
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysinit
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[52]"></a>Bsp_FLASH_Init</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, bsp.o(i.Bsp_FLASH_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Bsp_FLASH_Init &rArr; SysFlashInit &rArr; FLASH_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysFlashInit
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[54]"></a>Bsp_Relocation_Int</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, bsp.o(i.Bsp_Relocation_Int))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Bsp_Relocation_Int
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_vtor
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[56]"></a>Bsp_UART_Init</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, bsp.o(i.Bsp_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Bsp_UART_Init &rArr; SysUartInit &rArr; UART_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysUartInit
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_Pro
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[58]"></a>FeedDog</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, bsp.o(i.FeedDog))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FeedDog
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDOG_Feed
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArmDataRxPro
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a0]"></a>Queue_Cnt</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, sch_queue.o(i.Queue_Cnt))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBufCnt
</UL>

<P><STRONG><a name="[5a]"></a>ArmDataAnalyse</STRONG> (Thumb, 234 bytes, Stack size 16 bytes, app_arm.o(i.ArmDataAnalyse))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = ArmDataAnalyse &rArr; Arm_ACK &rArr; UartTxData &rArr; Uart_Tx_DataPro &rArr; UartGetFromBuf &rArr; Queue_Out
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysFlashInit
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BootloaderJumpToApp
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_memcpy
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PostMessage
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Out_IapMode
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Arm_ACK
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArmDataRxPro
</UL>

<P><STRONG><a name="[60]"></a>ArmDataRxPro</STRONG> (Thumb, 506 bytes, Stack size 24 bytes, app_arm.o(i.ArmDataRxPro))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = ArmDataRxPro &rArr; ArmDataAnalyse &rArr; Arm_ACK &rArr; UartTxData &rArr; Uart_Tx_DataPro &rArr; UartGetFromBuf &rArr; Queue_Out
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FeedDog
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_memcpy
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCheckData_Xor
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_compare
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AtDataAnalyse
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArmDataAnalyse
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartRxData
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartRxCnt
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5b]"></a>Arm_ACK</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, app_arm.o(i.Arm_ACK))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Arm_ACK &rArr; UartTxData &rArr; Uart_Tx_DataPro &rArr; UartGetFromBuf &rArr; Queue_Out
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCheckData_Xor
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartTxData
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArmDataAnalyse
</UL>

<P><STRONG><a name="[66]"></a>AtDataAnalyse</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, app_arm.o(i.AtDataAnalyse))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = AtDataAnalyse &rArr; SysWaitMs &rArr; SysWaitUs
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysWaitMs
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_compare
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArmDataRxPro
</UL>

<P><STRONG><a name="[ab]"></a>Bsp_SysTick_Init</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, bsp.o(i.Bsp_SysTick_Init))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[69]"></a>Bsp_WDOG_Init</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, bsp.o(i.Bsp_WDOG_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Bsp_WDOG_Init &rArr; WDOG_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDOG_Init
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDOG_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6c]"></a>FEI_to_FBE_OSC</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, ics.o(i.FEI_to_FBE_OSC))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = FEI_to_FBE_OSC &rArr; ICS_SetClkDivider
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSC_Init
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICS_SetClkDivider
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICS_Init
</UL>

<P><STRONG><a name="[6f]"></a>FEI_to_FEE</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, ics.o(i.FEI_to_FEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = FEI_to_FEE &rArr; ICS_SetClkDivider
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSC_Init
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICS_SetClkDivider
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICS_Init
</UL>

<P><STRONG><a name="[70]"></a>FEI_to_FEE_OSC</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, ics.o(i.FEI_to_FEE_OSC))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = FEI_to_FEE_OSC &rArr; ICS_SetClkDivider
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSC_Init
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICS_SetClkDivider
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICS_Init
</UL>

<P><STRONG><a name="[71]"></a>FLASH_EraseSector</STRONG> (Thumb, 96 bytes, Stack size 12 bytes, flash.o(i.FLASH_EraseSector))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = FLASH_EraseSector
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_LaunchCMD
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCU_Updata_pro
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;In_ResetMode
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Out_IapMode
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;In_IapMode
</UL>

<P><STRONG><a name="[73]"></a>FLASH_Init</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, flash.o(i.FLASH_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FLASH_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysFlashInit
</UL>

<P><STRONG><a name="[72]"></a>FLASH_LaunchCMD</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, flash.o(i.FLASH_LaunchCMD))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Program1LongWord
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_EraseSector
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Program2LongWords
</UL>

<P><STRONG><a name="[75]"></a>FLASH_Program1LongWord</STRONG> (Thumb, 118 bytes, Stack size 12 bytes, flash.o(i.FLASH_Program1LongWord))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = FLASH_Program1LongWord
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_LaunchCMD
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;In_ResetMode
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Program_U8
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;In_IapMode
</UL>

<P><STRONG><a name="[76]"></a>FLASH_Program2LongWords</STRONG> (Thumb, 140 bytes, Stack size 12 bytes, flash.o(i.FLASH_Program2LongWords))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = FLASH_Program2LongWords
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_LaunchCMD
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Program_U8
</UL>

<P><STRONG><a name="[77]"></a>Flash_Program_U8</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, mw_flash.o(i.Flash_Program_U8))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Flash_Program_U8 &rArr; FLASH_Program1LongWord
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Program1LongWord
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Program2LongWords
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8_TO_u32
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCU_Updata_pro
</UL>

<P><STRONG><a name="[8f]"></a>GPIO_PinClear</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, gpio.o(i.GPIO_PinClear))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Power_Ctl
</UL>

<P><STRONG><a name="[ac]"></a>GPIO_PinInit</STRONG> (Thumb, 398 bytes, Stack size 12 bytes, gpio.o(i.GPIO_PinInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIO_PinInit
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[90]"></a>GPIO_PinSet</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, gpio.o(i.GPIO_PinSet))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Power_Ctl
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[63]"></a>GetCheckData_Xor</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, sch_common.o(i.GetCheckData_Xor))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArmDataRxPro
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M2A_TxService
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Arm_ACK
</UL>

<P><STRONG><a name="[79]"></a>GetClockDay</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, mw_rtc.o(i.GetClockDay))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GetClockDay &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
</UL>

<P><STRONG><a name="[7b]"></a>GetCurrentTime</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, mw_rtc.o(i.GetCurrentTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GetCurrentTime &rArr; GetClockDay &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMaxDay
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetClockDay
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_IRQHandler
</UL>

<P><STRONG><a name="[7c]"></a>GetMaxDay</STRONG> (Thumb, 34 bytes, Stack size 20 bytes, mw_rtc.o(i.GetMaxDay))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GetMaxDay
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
</UL>

<P><STRONG><a name="[7d]"></a>GetMessage</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, sch_message.o(i.GetMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GetMessage &rArr; Queue_Out
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Queue_Out
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M2A_TxService
</UL>

<P><STRONG><a name="[7f]"></a>IAP_Pro</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, app_updata.o(i.IAP_Pro))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = IAP_Pro &rArr; Bsp_UART_Init &rArr; SysUartInit &rArr; UART_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysFlashInit
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updata_Init
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;In_ResetMode
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bsp_UART_Init
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;In_IapMode
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_100ms_Pro
</UL>

<P><STRONG><a name="[83]"></a>ICS_Init</STRONG> (Thumb, 68 bytes, Stack size 4 bytes, ics.o(i.ICS_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ICS_Init &rArr; FEI_to_FEE_OSC &rArr; ICS_SetClkDivider
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FEI_to_FEE_OSC
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FEI_to_FEE
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FEI_to_FBE_OSC
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysinit
</UL>

<P><STRONG><a name="[6e]"></a>ICS_SetClkDivider</STRONG> (Thumb, 74 bytes, Stack size 12 bytes, ics.o(i.ICS_SetClkDivider))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ICS_SetClkDivider
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FEI_to_FEE_OSC
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FEI_to_FEE
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FEI_to_FBE_OSC
</UL>

<P><STRONG><a name="[ae]"></a>ICS_Trim</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ics.o(i.ICS_Trim))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysinit
</UL>

<P><STRONG><a name="[1c]"></a>IRQ_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, interrupt.o(i.IRQ_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[80]"></a>In_IapMode</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, app_updata.o(i.In_IapMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = In_IapMode &rArr; FLASH_Program1LongWord
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Program1LongWord
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_EraseSector
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_Pro
</UL>

<P><STRONG><a name="[81]"></a>In_ResetMode</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, app_updata.o(i.In_ResetMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = In_ResetMode &rArr; FLASH_Program1LongWord
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Program1LongWord
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_EraseSector
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_Pro
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a8]"></a>Is_IapMode</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, app_updata.o(i.Is_IapMode))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a9]"></a>Is_ResetMode</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, app_updata.o(i.Is_ResetMode))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[87]"></a>Is_Uart_Choose_PC</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, main.o(i.Is_Uart_Choose_PC))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCU_Updata_pro
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[88]"></a>Is_Uart_Choose_PC1</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, main.o(i.Is_Uart_Choose_PC1))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCU_Updata_pro
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2d]"></a>KBI0_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, interrupt.o(i.KBI0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[84]"></a>M2A_TxService</STRONG> (Thumb, 250 bytes, Stack size 24 bytes, app_arm.o(i.M2A_TxService))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = M2A_TxService &rArr; UartTxData &rArr; Uart_Tx_DataPro &rArr; UartGetFromBuf &rArr; Queue_Out
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_memcpy
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMessage
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCheckData_Xor
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartTxData
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TASK_Arm_Pro
</UL>

<P><STRONG><a name="[85]"></a>MCU_Updata_pro</STRONG> (Thumb, 262 bytes, Stack size 24 bytes, app_updata.o(i.MCU_Updata_pro))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = MCU_Updata_pro &rArr; Flash_Program_U8 &rArr; FLASH_Program1LongWord
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_memset
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updata_Init
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_EraseSector
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Is_Uart_Choose_PC1
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Is_Uart_Choose_PC
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PostMessage
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Program_U8
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6d]"></a>OSC_Init</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, ics.o(i.OSC_Init))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FEI_to_FEE_OSC
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FEI_to_FEE
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FEI_to_FBE_OSC
</UL>

<P><STRONG><a name="[5d]"></a>Out_IapMode</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, app_updata.o(i.Out_IapMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Out_IapMode &rArr; FLASH_EraseSector
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_EraseSector
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArmDataAnalyse
</UL>

<P><STRONG><a name="[5c]"></a>PostMessage</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, sch_message.o(i.PostMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = PostMessage &rArr; Queue_In
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Queue_In
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCU_Updata_pro
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArmDataAnalyse
</UL>

<P><STRONG><a name="[89]"></a>Queue_In</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, sch_queue.o(i.Queue_In))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Queue_In
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_memcpy
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PostMessage
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartPutToBuf
</UL>

<P><STRONG><a name="[8a]"></a>Queue_Init</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, sch_queue.o(i.Queue_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Queue_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBufInit
</UL>

<P><STRONG><a name="[7e]"></a>Queue_Out</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, sch_queue.o(i.Queue_Out))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Queue_Out
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_memcpy
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMessage
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartGetFromBuf
</UL>

<P><STRONG><a name="[29]"></a>RTC_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, interrupt.o(i.RTC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = RTC_IRQHandler &rArr; GetCurrentTime &rArr; GetClockDay &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[8b]"></a>SCH_Task_Execute</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, task.o(i.SCH_Task_Execute))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = SCH_Task_Execute &rArr; Task_8ms_Pro &rArr; TASK_Arm_Pro &rArr; M2A_TxService &rArr; UartTxData &rArr; Uart_Tx_DataPro &rArr; UartGetFromBuf &rArr; Queue_Out
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_8ms_Pro
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_100ms_Pro
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[af]"></a>SIM_Init</STRONG> (Thumb, 116 bytes, Stack size 12 bytes, sim.o(i.SIM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SIM_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysinit
</UL>

<P><STRONG><a name="[8e]"></a>SYS_Power_Ctl</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, mw_gpio.o(i.SYS_Power_Ctl))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SYS_Power_Ctl
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinSet
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinClear
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[53]"></a>SysFlashInit</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, mw_flash.o(i.SysFlashInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SysFlashInit &rArr; FLASH_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_Pro
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bsp_FLASH_Init
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArmDataAnalyse
</UL>

<P><STRONG><a name="[14]"></a>SysTick_Handler</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, interrupt.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>SysUartInit</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, mw_uart.o(i.SysUartInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SysUartInit &rArr; UART_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EnableInterrupt
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBufInit
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bsp_UART_Init
</UL>

<P><STRONG><a name="[96]"></a>SysWait1Us</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, sch_common.o(i.SysWait1Us))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysWaitUs
</UL>

<P><STRONG><a name="[68]"></a>SysWaitMs</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, sch_common.o(i.SysWaitMs))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SysWaitMs &rArr; SysWaitUs
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysWaitUs
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AtDataAnalyse
</UL>

<P><STRONG><a name="[95]"></a>SysWaitUs</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, sch_common.o(i.SysWaitUs))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SysWaitUs
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysWait1Us
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysWaitMs
</UL>

<P><STRONG><a name="[35]"></a>SystemInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_skeaz1284.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(.text)
</UL>
<P><STRONG><a name="[aa]"></a>SystemInit_A</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, system_skeaz1284.o(i.SystemInit_A))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[97]"></a>TASK_Arm_Pro</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, app_arm.o(i.TASK_Arm_Pro))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = TASK_Arm_Pro &rArr; M2A_TxService &rArr; UartTxData &rArr; Uart_Tx_DataPro &rArr; UartGetFromBuf &rArr; Queue_Out
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M2A_TxService
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_8ms_Pro
</UL>

<P><STRONG><a name="[8d]"></a>Task_100ms_Pro</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, task.o(i.Task_100ms_Pro))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Task_100ms_Pro &rArr; IAP_Pro &rArr; Bsp_UART_Init &rArr; SysUartInit &rArr; UART_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_Pro
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCH_Task_Execute
</UL>

<P><STRONG><a name="[8c]"></a>Task_8ms_Pro</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, task.o(i.Task_8ms_Pro))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Task_8ms_Pro &rArr; TASK_Arm_Pro &rArr; M2A_TxService &rArr; UartTxData &rArr; Uart_Tx_DataPro &rArr; UartGetFromBuf &rArr; Queue_Out
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TASK_Arm_Pro
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCH_Task_Execute
</UL>

<P><STRONG><a name="[21]"></a>UART0_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, interrupt.o(i.UART0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = UART0_IRQHandler &rArr; UART_IntSerive &rArr; Uart_Tx_DataPro &rArr; UartGetFromBuf &rArr; Queue_Out
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_IntSerive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>UART1_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, interrupt.o(i.UART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = UART1_IRQHandler &rArr; UART_IntSerive &rArr; Uart_Tx_DataPro &rArr; UartGetFromBuf &rArr; Queue_Out
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_IntSerive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>UART2_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, interrupt.o(i.UART2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = UART2_IRQHandler &rArr; UART_IntSerive &rArr; Uart_Tx_DataPro &rArr; UartGetFromBuf &rArr; Queue_Out
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_IntSerive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[99]"></a>UART_CheckFlag</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, uart.o(i.UART_CheckFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = UART_CheckFlag
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_GetFlags
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_IntSerive
</UL>

<P><STRONG><a name="[a6]"></a>UART_DisableInterrupt</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, uart.o(i.UART_DisableInterrupt))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartTxIntDis
</UL>

<P><STRONG><a name="[92]"></a>UART_EnableInterrupt</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, uart.o(i.UART_EnableInterrupt))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysUartInit
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartTxIntEn
</UL>

<P><STRONG><a name="[9b]"></a>UART_GetChar</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, uart.o(i.UART_GetChar))
<BR><BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_GetChar
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_IntSerive
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_GetChar
</UL>

<P><STRONG><a name="[9a]"></a>UART_GetFlags</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, uart.o(i.UART_GetFlags))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckFlag
</UL>

<P><STRONG><a name="[91]"></a>UART_Init</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, uart.o(i.UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysUartInit
</UL>

<P><STRONG><a name="[98]"></a>UART_IntSerive</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, mw_uart.o(i.UART_IntSerive))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = UART_IntSerive &rArr; Uart_Tx_DataPro &rArr; UartGetFromBuf &rArr; Queue_Out
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_GetChar
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckFlag
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Tx_DataPro
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Rx_DataPro
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_IRQHandler
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
</UL>

<P><STRONG><a name="[9e]"></a>UART_PutChar</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, uart.o(i.UART_PutChar))
<BR><BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_PutChar
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_PutChar
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartSendData8
</UL>

<P><STRONG><a name="[9f]"></a>UartBufCnt</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, mw_uart.o(i.UartBufCnt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UartBufCnt
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Queue_Cnt
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartTxCnt
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartRxCnt
</UL>

<P><STRONG><a name="[94]"></a>UartBufInit</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, mw_uart.o(i.UartBufInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UartBufInit &rArr; Queue_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Queue_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysUartInit
</UL>

<P><STRONG><a name="[a1]"></a>UartGetFromBuf</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, mw_uart.o(i.UartGetFromBuf))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UartGetFromBuf &rArr; Queue_Out
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Queue_Out
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Tx_DataPro
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartRxData
</UL>

<P><STRONG><a name="[a2]"></a>UartPutToBuf</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, mw_uart.o(i.UartPutToBuf))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UartPutToBuf &rArr; Queue_In
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Queue_In
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Rx_DataPro
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartTxData
</UL>

<P><STRONG><a name="[65]"></a>UartRxCnt</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, mw_uart.o(i.UartRxCnt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UartRxCnt &rArr; UartBufCnt
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBufCnt
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArmDataRxPro
</UL>

<P><STRONG><a name="[62]"></a>UartRxData</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, mw_uart.o(i.UartRxData))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UartRxData &rArr; UartGetFromBuf &rArr; Queue_Out
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartGetFromBuf
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArmDataRxPro
</UL>

<P><STRONG><a name="[a3]"></a>UartSendData8</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, mw_uart.o(i.UartSendData8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UartSendData8
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_PutChar
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Tx_DataPro
</UL>

<P><STRONG><a name="[a4]"></a>UartTxCnt</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, mw_uart.o(i.UartTxCnt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UartTxCnt &rArr; UartBufCnt
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBufCnt
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Tx_DataPro
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartTxData
</UL>

<P><STRONG><a name="[67]"></a>UartTxData</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, mw_uart.o(i.UartTxData))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = UartTxData &rArr; Uart_Tx_DataPro &rArr; UartGetFromBuf &rArr; Queue_Out
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Tx_DataPro
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartTxCnt
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartPutToBuf
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M2A_TxService
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Arm_ACK
</UL>

<P><STRONG><a name="[a5]"></a>UartTxIntDis</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, mw_uart.o(i.UartTxIntDis))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UartTxIntDis
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DisableInterrupt
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Tx_DataPro
</UL>

<P><STRONG><a name="[a7]"></a>UartTxIntEn</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, mw_uart.o(i.UartTxIntEn))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UartTxIntEn
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EnableInterrupt
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Tx_DataPro
</UL>

<P><STRONG><a name="[9c]"></a>Uart_Rx_DataPro</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, mw_uart.o(i.Uart_Rx_DataPro))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Uart_Rx_DataPro &rArr; UartPutToBuf &rArr; Queue_In
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartPutToBuf
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_IntSerive
</UL>

<P><STRONG><a name="[9d]"></a>Uart_Tx_DataPro</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, mw_uart.o(i.Uart_Tx_DataPro))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Uart_Tx_DataPro &rArr; UartGetFromBuf &rArr; Queue_Out
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartTxIntEn
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartTxIntDis
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartTxCnt
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartSendData8
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartGetFromBuf
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_IntSerive
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartTxData
</UL>

<P><STRONG><a name="[82]"></a>Updata_Init</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, app_updata.o(i.Updata_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Updata_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_Pro
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCU_Updata_pro
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6b]"></a>WDOG_Enable</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, wdog.o(i.WDOG_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bsp_WDOG_Init
</UL>

<P><STRONG><a name="[59]"></a>WDOG_Feed</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wdog.o(i.WDOG_Feed))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FeedDog
</UL>

<P><STRONG><a name="[6a]"></a>WDOG_Init</STRONG> (Thumb, 106 bytes, Stack size 12 bytes, wdog.o(i.WDOG_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = WDOG_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bsp_WDOG_Init
</UL>

<P><STRONG><a name="[61]"></a>__ARM_common_switch8</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, app_arm.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCU_Updata_pro
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArmDataRxPro
</UL>

<P><STRONG><a name="[42]"></a>main</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = main &rArr; ArmDataRxPro &rArr; ArmDataAnalyse &rArr; Arm_ACK &rArr; UartTxData &rArr; Uart_Tx_DataPro &rArr; UartGetFromBuf &rArr; Queue_Out
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updata_Init
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit_A
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysWaitMs
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Power_Ctl
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCH_Task_Execute
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCU_Updata_pro
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Is_ResetMode
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Is_IapMode
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;In_ResetMode
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinSet
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinInit
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FeedDog
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bsp_WDOG_Init
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bsp_UART_Init
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bsp_SysTick_Init
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bsp_Relocation_Int
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bsp_FLASH_Init
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bsp_Clock_Init
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BootloaderJumpToApp
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArmDataRxPro
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Is_Uart_Choose_PC1
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Is_Uart_Choose_PC
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[64]"></a>sch_compare</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, app_arm.o(i.sch_compare))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sch_compare
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArmDataRxPro
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AtDataAnalyse
</UL>

<P><STRONG><a name="[5f]"></a>sch_memcpy</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, sch_common.o(i.sch_memcpy))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArmDataRxPro
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M2A_TxService
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArmDataAnalyse
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Queue_Out
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Queue_In
</UL>

<P><STRONG><a name="[86]"></a>sch_memset</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, sch_common.o(i.sch_memset))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updata_Init
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCU_Updata_pro
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Queue_Init
</UL>

<P><STRONG><a name="[51]"></a>sysinit</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, sysinit.o(i.sysinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = sysinit &rArr; ICS_Init &rArr; FEI_to_FEE_OSC &rArr; ICS_SetClkDivider
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIM_Init
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICS_Trim
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICS_Init
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bsp_Clock_Init
</UL>

<P><STRONG><a name="[78]"></a>u8_TO_u32</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, mw_flash.o(i.u8_TO_u32))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Program_U8
</UL>

<P><STRONG><a name="[55]"></a>write_vtor</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, arm_cm0.o(i.write_vtor))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bsp_Relocation_Int
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[93]"></a>NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, mw_uart.o(i.NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysUartInit
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[4e]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>
<HR></body></html>
